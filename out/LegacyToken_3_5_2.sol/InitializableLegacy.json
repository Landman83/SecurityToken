{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/_testContracts/v_3_5_2/LegacyToken_3_5_2.sol\":\"InitializableLegacy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@onchain-id/=node_modules/@onchain-id/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@primitivefi/=lib/@primitivefi/\",\":@xyrusworx/=lib/@xyrusworx/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/_testContracts/v_3_5_2/LegacyToken_3_5_2.sol\":{\"keccak256\":\"0x093a6672d770c425a08f723374af537be23e2c12d734295a997bed1965a35d3c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca207a617ee691e39e5a50f133dec5f2ef7f6cc3dd8d0a2ad0afd59a476519f4\",\"dweb:/ipfs/QmPV7TLdDopCd4DVRF2oMdkW72o1P9Lj2VqvLyGHEthdAL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@onchain-id/=node_modules/@onchain-id/","@openzeppelin/=node_modules/@openzeppelin/","@primitivefi/=lib/@primitivefi/","@xyrusworx/=lib/@xyrusworx/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/_testContracts/v_3_5_2/LegacyToken_3_5_2.sol":"InitializableLegacy"},"evmVersion":"london","libraries":{}},"sources":{"contracts/_testContracts/v_3_5_2/LegacyToken_3_5_2.sol":{"keccak256":"0x093a6672d770c425a08f723374af537be23e2c12d734295a997bed1965a35d3c","urls":["bzz-raw://ca207a617ee691e39e5a50f133dec5f2ef7f6cc3dd8d0a2ad0afd59a476519f4","dweb:/ipfs/QmPV7TLdDopCd4DVRF2oMdkW72o1P9Lj2VqvLyGHEthdAL"],"license":"GPL-3.0"}},"version":1},"id":6}